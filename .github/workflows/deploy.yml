name: ZibZo CI/CD

on:
  push:
    branches:
      - "**"

jobs:
  build-and-check:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Step 3: Clean node_modules
      - name: Clean node_modules
        run: rm -rf node_modules

      # Step 4: Install Dependencies
      - name: Install Dependencies
        run: npm install

  deploy-to-render:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-and-check # Ensure tests pass before deploying

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Step 3: Deploy to Render
      - name: Trigger Deployment on Render
        env:
          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }} # Render deploy URL secret
        run: |
          echo "Triggering deployment on Render"

          # Send a POST request to the Render deployment URL and capture the response
          response=$(curl -s -w "%{http_code}" -o response_body.txt "$deploy_url")

          # Check if the response code is 200 (OK)
          if [[ "$response" == "200" ]]; then
            echo "Deployment triggered successfully!"
          else
            echo "Failed to trigger deployment. Response code: $response"
            echo "Response body: $(cat response_body.txt)"  # Output the response body for debugging purposes
            exit 1  # Fail the job if the request was not successful
          fi

      # Step 4: Check Deployment Status on Render
      - name: Check Deployment Status on Render
        env:
          service_id: ${{ secrets.RENDER_SERVICE_ID }} # Render service ID secret
          api_key: ${{ secrets.RENDER_API_KEY }} # Render API key secret
        run: |
          echo "Checking deployment status on Render..."

          # Poll Render API until the deployment is live or failed
          status=""
          until [[ "$status" == "live" || "$status" == "failed" ]]; do
            # Make an API call to Render to get the service status
            response=$(curl -s -H "Authorization: Bearer $api_key" \
                             "https://api.render.com/v1/services/$service_id" | jq -r '.service.status')

            echo "Current deployment status: $response"
            
            if [[ "$response" == "live" ]]; then
              echo "Deployment is live!"
              break
            elif [[ "$response" == "failed" ]]; then
              echo "Deployment failed."
              exit 1  # Fail the job if deployment fails
            fi
            
            # Wait for 10 seconds before checking again
            sleep 10
          done
